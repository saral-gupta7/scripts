#!/bin/bash

GREEN="\033[0;32m"
RED="\033[0;31m"
YELLOW="\033[1;33m"
RESET="\033[0m"
PURPLE="\e[35m"

echo -e "${GREEN}Welcome to FFMPEG CLI Tool.${RESET}" >&2
echo "" >&2

operation=$(printf "1. Format Conversion\n2. Convert to BNW\n3. Extract Audio\n4. Clip Media\n5. Extract frames" | fzf --prompt="Choose the operation to peform" --layout=reverse --header="Choose what you want to do:")

if [[ -n "$operation" ]]; then

  # this is how to prvide parenthesis condition \(...\). This escape prevent shell from interpretting them.
  echo -e "${GREEN}Select a media file from the current directory:${RESET}"
  media_file=$(find . -maxdepth 1 -type f \( -iname "*.mp4" -o -iname "*.mkv" -o -iname "*.avi" -o -iname "*.webm" \) | sed 's|^\./||' |
    fzf --prompt="File: " --header="Pick a video file to process:")

else
  echo -e "${RED}No option selected. Aborting...!${RESET}"
fi

case "$operation" in
"1. Convert to BNW")
  ffmpeg -i $media_file -vf format=gray -c:v libx264 -preset ultrafast -crf 28 -c:a copy bnw_$media_file.mp4
  ;;
"3. Extract Audio")
  ffmpeg -i "$media_file" -q:a 0 -map a "${media_file%.*}.mp3"
  ;;
"5. Extract Frames")
  mkdir -p frames
  ffmpeg -i "$media_file" -vf "fps=1" frames/frame_%04d.png
  echo -e "${GREEN}Frames extracted to ./frames directory${RESET}"
  ;;
"4. Clip Media")
  read -p "Start time (e.g., 00:00:15): " start
  read -p "Duration (e.g., 00:00:17): " end
  read -p "Enter name of output file: " output
  ffmpeg -hide_banner -loglevel error -y -ss "$start" -to "$end" -i "$media_file" -c:v libx264 -c:a aac "${output}.mp4"
  echo -e "${GREEN}Clipped video saved as $output${RESET}"
  ;;

esac
